name: CI/CD Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: restaurante
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin2525
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379

    steps:
      - name: Clonar c√≥digo
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Instalar dependencias
        run: npm install

      - name: Ejecutar pruebas y mostrar cobertura
        run: npm test

      - name: Validar sintaxis
        run: node -c src/index.js

      - name: Construir imagen Docker
        run: docker build -t restaurante-api .

      - name: Login en DockerHub
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
        run: echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin

      - name: Etiquetar imagen para DockerHub
        run: docker tag restaurante-api unpluggedrevan/restaurante-api:latest

      - name: Publicar en DockerHub
        run: docker push unpluggedrevan/restaurante-api:latest
